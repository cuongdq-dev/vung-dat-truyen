---
import Head from "~/components/bases/head.astro";
import Navbar from "~/components/elements/navbar.astro";
import Header from "~/components/shared/header.astro";
import { SITE } from "~/lib/config";
import type { Entry } from "~/lib/types";

const { categories, adsense } = Astro.locals;
const {
  description,
  keywords,
  title,
  ogImage,
  pubDatetime,
  modDatetime,
  entry,
  headerSticky,
  categorySlug,
}: {
  description?: string;
  keywords?: string;
  title?: string;
  categorySlug?: string;
  ogImage?: string;
  pubDatetime?: Date;
  modDatetime?: Date;
  entry?: Entry;
  headerSticky?: boolean;
} = Astro.props;
---

<!doctype html>
<html lang={SITE.locale} dir="ltr">
  <Head
    ogImage={ogImage}
    description={description || entry?.data?.description}
    keywords={keywords}
    title={title || entry?.data?.title}
    adsense={adsense}
    pubDatetime={pubDatetime}
    modDatetime={modDatetime}
  />

  <body>
    <Header
      categorySlug={categorySlug}
      sticky={headerSticky}
      categories={categories}
    />

    <main id="main-container">
      <div class="w-full lg:max-w-[70%] mx-auto pb-16">
        <div class="mb-10"><slot /></div>
        <Navbar />
      </div>
    </main>
    <script>
      document.startViewTransition = document.startViewTransition || (() => {});
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const progressBar = document.createElement("div");
        progressBar.id = "progress-bar";
        Object.assign(progressBar.style, {
          position: "fixed",
          top: "0",
          left: "0",
          width: "0%",
          height: "3px",
          backgroundColor: "#ff4500",
          zIndex: "9999",
          transition: "width 0.3s ease-out, opacity 0.5s ease-in-out",
          opacity: "1",
        });
        document.body.appendChild(progressBar);

        let loading = false;
        let progress = 0;

        function startLoading() {
          if (loading) return; // Tránh gọi nhiều lần
          loading = true;
          progress = 0;
          progressBar.style.width = "0%";
          progressBar.style.opacity = "1";

          function animateProgress() {
            if (progress < 90) {
              progress += Math.random() * 2; // Tăng tốc độ ngẫu nhiên
              progressBar.style.width = progress + "%";
              requestAnimationFrame(animateProgress);
            }
          }
          animateProgress();
        }

        function finishLoading() {
          progressBar.style.width = "100%";
          setTimeout(() => {
            progressBar.style.opacity = "0";
            setTimeout(() => {
              progressBar.style.width = "0%"; // Reset về 0 để sẵn sàng cho lần tiếp theo
              loading = false;
            }, 500);
          }, 300);
        }

        document.querySelectorAll("a").forEach((link) => {
          link.addEventListener("click", function (event) {
            if (
              link.hostname === window.location.hostname &&
              link.target !== "_blank"
            ) {
              event.preventDefault();
              startLoading();
              window.location.href = link.href;
            }
          });
        });

        window.addEventListener("load", function () {
          finishLoading();
        });
      });
    </script>
  </body>
</html>
